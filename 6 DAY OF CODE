#include <bits/stdc++.h>

using namespace std;

// Complete the knightlOnAChessboard function below.
int chess(int a,int b,int x,int y,int c)
{
    if(a==4&&b==4)
    return c;
    else if(a>4||b>4||a<0||b<0)
    return -1;
    else 
    {
        c++;
        return chess(a+x,b+y,x,y,c);
    }
}
vector<vector<int>> knightlOnAChessboard(int n) 
{
    vector<vector<int>> a(n-1,vector<int> (n-1, 0));
    int i,j,c=1;
    for(i=0;i<n-1;i++)
    {
        for(j=0;j<n-1;j++)
        {
            a[i][j]=chess(i+1,j+1,i+1,j+1,c);
        }
    }
    return a;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    vector<vector<int>> result = knightlOnAChessboard(n);

    for (int i = 0; i < result.size(); i++) {
        for (int j = 0; j < result[i].size(); j++) {
            fout << result[i][j];

            if (j != result[i].size() - 1) {
                fout << " ";
            }
        }

        if (i != result.size() - 1) {
            fout << "\n";
        }
    }

    fout << "\n";

    fout.close();

    return 0;
}
